<!-- code from https://openlayers.org/en/latest/examples/ -->
<!DOCTYPE html>
<html>
<head>
	<title>Icon Symbolizer</title>
	<link rel="stylesheet" href="https://openlayers.org/en/v3.20.0/css/ol.css" type="text/css">
	<!-- The line below is only needed for old environments like Internet Explorer and Android 4.x -->
	<script src="https://cdn.polyfill.io/v2/polyfill.min.js?features=requestAnimationFrame,Element.prototype.classList,URL"></script>
	<script src="https://openlayers.org/en/v3.20.0/build/ol.js"></script>
	<script src="https://code.jquery.com/jquery-2.2.3.min.js"></script>
	<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css">
	<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js"></script>
	<style>
		#map {
			position: relative;
		}
	</style>
</head>
<body>
	<h1><%= @email %></h1>
	<div id="map" class="map"><div id="popup"></div>

</div>
<script>
	//convert coordinate to latlong
	function coordinate_to_latlong(coor)
	{
		return ol.proj.transform(coor,'EPSG:3857','EPSG:4326')
	}
	//convert latlong to coordinate
	function latlong_to_coordinate(latlong)
	{
		return ol.proj.transform(latlong,'EPSG:4326','EPSG:3857')
	}
	//function to get create a new feature based on x,y coordinate
	function get_new_layer_point(x,y)
	{
		var iconFeature = new ol.Feature({
			geometry: new ol.geom.Point(latlong_to_coordinate([x,y]))
			,
			name: "<%= @email %>"
		});

		var iconStyle = new ol.style.Style({
			image: new ol.style.Icon( ({
				anchor: [0.5, 46],
				anchorXUnits: 'fraction',
				anchorYUnits: 'pixels',
				src: 'https://openlayers.org/en/v3.20.0/examples/data/icon.png'
			}))
		});

		iconFeature.setStyle(iconStyle);


		return iconFeature;
	}


	//loop thru shares and add new feature
	var feature_array = []
	<% @public_shares.each do |share| %>
	var x = <%= share.lonlat.x %>;
	var y = <%= share.lonlat.y %>;

	var share_type = "<%= share.share_type.name %>";
	var share_user_id = "<%= share.user.id %>";
	var share_user_email = "<%= share.user.email %>";
	if(window.user_id == share_user_id)
	{
		var iconFeature = 
		(x,y,share_type);
	}
	else
	{
		var iconFeature = get_new_layer_point(x,y);
	}
	feature_array.push(iconFeature)
	<% end %> 	
	
	var vectorSource = new ol.source.Vector({features: feature_array});

	var vectorLayer = new ol.layer.Vector({source: vectorSource});

	var rasterLayer = new ol.layer.Tile({
		source: new ol.source.TileJSON({
			url: 'https://api.tiles.mapbox.com/v3/mapbox.geography-class.json?secure',
			crossOrigin: ''
		})
	});

	var map = new ol.Map({
		layers: [new ol.layer.Tile({
			source: new ol.source.OSM()
		})
		, vectorLayer],
		target: document.getElementById('map'),
		view: new ol.View({
			center: [0, 0],
			zoom: 3
		})
	});


	
	var element = document.getElementById('popup');

	var popup = new ol.Overlay({
		element: element,
		positioning: 'bottom-center',
		stopEvent: false,
		offset: [0, -50]
	});
	map.addOverlay(popup);

	
      // change mouse cursor when over marker
      map.on('pointermove', function(evt) {
      	if (evt.dragging) {
      		$(element).popover('destroy');
      		return;
      	}
      	var pixel = map.getEventPixel(evt.originalEvent);
      	var hit = map.hasFeatureAtPixel(pixel);
      	map.getTarget().style.cursor = hit ? 'pointer' : '';


      	var feature = map.forEachFeatureAtPixel(evt.pixel,
      		function(feature) {
      			return feature;
      		});
      	if (feature) {
      		var coordinates = feature.getGeometry().getCoordinates();
      		popup.setPosition(coordinates);
      		$(element).popover({
      			'placement': 'top',
      			'html': true,
      			'content': feature.get('name')
      		});
      		$(element).popover('show');
      	} else {
      		$(element).popover('destroy');
      	}


      });
  </script>
</body>
</html>